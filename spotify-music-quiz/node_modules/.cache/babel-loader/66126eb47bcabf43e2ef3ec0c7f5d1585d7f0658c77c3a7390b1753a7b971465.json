{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\18607\\\\Github\\\\spotify-music-quiz\\\\spotify-music-quiz\\\\src\\\\Game.js\";\nimport React, { Component } from 'react';\nimport { data, questions } from './quiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.idx = 0;\n    this.q = JSON.parse(questions);\n    this.keys = Object.keys(this.q[0]);\n    this.data = JSON.parse(data);\n    this.songkeys = Object.keys(this.data[0]);\n    this.question = \"blank\";\n    this.answer = \"\";\n    this.options = [];\n    this.points = 0;\n  }\n  shuffle(array) {\n    let currentIndex = array.length,\n      randomIndex;\n\n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  }\n  getRandomSong() {\n    var idx = Math.floor(Math.random() * this.songkeys.length);\n    var rankey = this.songkeys[idx];\n    return this.data[0][rankey];\n  }\n  generateAnswers(type) {\n    let ansType = type;\n\n    // get the answer\n    let answer = this.getRandomSong();\n\n    // get random songs, making sure that there are no repeats and the options are discrete\n    let songs = [answer.album.name];\n    let answers = [];\n    let numSongs = 1;\n    switch (ansType) {\n      case \"album\":\n        answers.push(answer.album.name);\n    }\n    while (numSongs < 4) {\n      var song = this.getRandomSong();\n      let checkAns;\n      switch (ansType) {\n        case \"album\":\n          checkAns = song.album.name;\n      }\n      if (!songs.includes(song) && !answers.includes(checkAns)) {\n        songs.push(song.album.name);\n        answers.push(checkAns);\n        numSongs++;\n      }\n    }\n    this.answer = answer.name;\n    this.options = this.shuffle(songs);\n  }\n  handleClick(idx) {\n    if (this.options[idx] === this.answer) {\n      this.points += 10;\n      // make ding\n    }\n  }\n\n  render() {\n    var question = this.q[0][1];\n    this.generateAnswers(\"album\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.q[0][\"1\"].query\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question\",\n        children: this.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.handleClick(0),\n        children: this.options[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.handleClick(1),\n        children: this.options[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.handleClick(2),\n        children: this.options[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.handleClick(3),\n        children: this.options[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionNum: 0\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(Question, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","data","questions","Question","constructor","props","idx","q","JSON","parse","keys","Object","songkeys","question","answer","options","points","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","getRandomSong","rankey","generateAnswers","type","ansType","songs","album","name","answers","numSongs","push","song","checkAns","includes","handleClick","render","query","Game","state","questionNum"],"sources":["C:/Users/18607/Github/spotify-music-quiz/spotify-music-quiz/src/Game.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { data, questions } from './quiz';\r\n\r\nexport class Question extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.idx = 0;\r\n        this.q = JSON.parse(questions);\r\n        this.keys = Object.keys(this.q[0]);\r\n        this.data = JSON.parse(data);\r\n        this.songkeys = Object.keys(this.data[0]);\r\n        this.question = \"blank\";\r\n\r\n        this.answer = \"\";\r\n        this.options = [];\r\n\r\n        this.points = 0;\r\n    }\r\n\r\n    shuffle(array) {\r\n        let currentIndex = array.length,  randomIndex;\r\n      \r\n        // While there remain elements to shuffle.\r\n        while (currentIndex != 0) {\r\n      \r\n          // Pick a remaining element.\r\n          randomIndex = Math.floor(Math.random() * currentIndex);\r\n          currentIndex--;\r\n      \r\n          // And swap it with the current element.\r\n          [array[currentIndex], array[randomIndex]] = [\r\n            array[randomIndex], array[currentIndex]];\r\n        }\r\n      \r\n        return array;\r\n    }\r\n\r\n    getRandomSong() {\r\n        var idx = Math.floor(Math.random() * this.songkeys.length);\r\n        var rankey = this.songkeys[idx];\r\n        return this.data[0][rankey];\r\n    }\r\n\r\n    generateAnswers(type) {\r\n        let ansType = type;\r\n\r\n        // get the answer\r\n        let answer = this.getRandomSong();\r\n\r\n        // get random songs, making sure that there are no repeats and the options are discrete\r\n        let songs = [answer.album.name];\r\n        let answers = [];\r\n        let numSongs = 1;\r\n\r\n        switch(ansType) {\r\n            case \"album\":\r\n                answers.push(answer.album.name);\r\n        }\r\n\r\n        while (numSongs < 4) {\r\n            var song = this.getRandomSong();\r\n            let checkAns;\r\n\r\n            switch(ansType) {\r\n                case \"album\":\r\n                    checkAns = song.album.name;\r\n            }\r\n\r\n            if (!songs.includes(song) && !answers.includes(checkAns)) {\r\n                songs.push(song.album.name);\r\n                answers.push(checkAns);\r\n                numSongs++;\r\n            }\r\n        }\r\n\r\n        this.answer = answer.name;\r\n        this.options = this.shuffle(songs);\r\n    }\r\n\r\n    handleClick(idx) {\r\n        if (this.options[idx] === this.answer) {\r\n            this.points += 10;\r\n            // make ding\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var question = this.q[0][1];\r\n       \r\n\r\n        this.generateAnswers(\"album\");\r\n\r\n        return (\r\n            <div>\r\n                <h1>{this.q[0][\"1\"].query}</h1>\r\n                <h2 className='question'>{this.answer}</h2>\r\n                <button className='btn' onClick={this.handleClick(0)}>{this.options[0]}</button>\r\n                <button className='btn' onClick={this.handleClick(1)}>{this.options[1]}</button>\r\n                <button className='btn' onClick={this.handleClick(2)}>{this.options[2]}</button>\r\n                <button className='btn' onClick={this.handleClick(3)}>{this.options[3]}</button>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questionNum: 0\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <Question />\r\n                {/* {Object.keys(songs[0])} */}\r\n            </div>\r\n        );\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}